! non-digraph relies on parens: [a (a)] ... is match greedy?
!for loans that don't syncopate (but may take morphology), consider writing vowels with special characters to escape syncope (or any other phonology that they need not take)
!could also translate loans into generic STEM+special char, then have loan word continuation lexica that spell out specific classes of loans by their phonological behavior

! important note (possibly): *sVh->sh != *sh for histo vowel deletion
define bound [%<|%>|%^|%*];
define sigma [
                b|d|g|p|t|k|
                j|c h|
                z (h)|s (h)|
                m|n|
                w|y|
                %'|h|
                a|i|o|e|
                a1| !a1>C -> a>C, a1>e1 -> >e, a1>a -> aa>, else: 0 (pl/obv not lengthened, dim quality not affected, otherwise, long a appears before suffixes, else: delete)
                i1| !i1> -> ii>, else: 0 (long i before all suffixes, else: delete) 
                i2| !i2 -> i (PA *i, trigger for palatalization)
                e1| !e1n[h|s|y] -> en[h|s|y], else: i (PA short *e, short for purposes of coalescence rule)
                o1| !behaves exactly like o is expected to act... where does it appear in morph output? -> not in nouns!
                w1| !w1[i|e1] -> o, (Odawa) w1a -> o, w1a -> wa, else: 0 (abstract w for PA labiovelars gw, kw, found in noun plurals) must be special char because velar-w clusters exist that do not undergo these rules (agwinde) (possibly could enforce morpheme boundary sensitivity if we wanted to get rid of w1 distinction)
                w2| !w2[n|#] -> 0, else: w (appears in nouns that synchronically end in i, form wag plurals)
                w3| !w3 -> 0 / C _, _C, _# (only surfaces in hiatus appears in negation)
                w4| !w4 surfaces pre-vocalically, sometimes as o (appears (primarily?) in cnj dub)
                w5| ![n|m]w5>a[n|g] -> [n|m]oa[n|g]->[n|m]oo[n|g], w5>goba -> >goba, else: w (VAI independent 3 infl)
                w6| !amw eat= amwaa, amo
                y1| !y1->0 (trigger for palatalization in participles, vowel raising in participles)
                y2| !y2->y mooday, jiibay have a y that doesn't delete like a good little glide
                s1| !s1->sh / _ i2
                m1| !m1->a / _ [m|n] (comp len in vti)
                m2| !m2-> [alpha place] / _ [b|d], or optionally deletes (also blocks syncope, make it add a vowel) this appears in loans with initial voiced stops
                n1| !n1->zh / _ i2 (appears in vtas)
                n2| !n2->0 / _ .#. (appears in inflectional morphemes)
                n3| !n3->0 / _ \.#. (appears after some negations)
                n4| !n4->n / (non comp len in vti)
                n5| !n5->en / lexically specific d-initial ccnj, else 0 
                b1| !d1b1 -> p (cnj preterites)
                d1| !nd1 -> ng, d1b1 -> p, d1y1 -> j, else: d 
                d2| !deletable d in vii, also for complex numerals
                c1| !conjunct, negation linker (nasal-neg[s] -> nz, v-v -> vyv)
                L1| !final vowel protector (used mostly on a handful of loans, hence the L, but also a couple of tightly bound compounds with aki, and miikna)
                X2| !'segment' to allow special phonology in ccnjs
                Va1| !Valen special char, instant remap: a lowered from o
                Vi1| !Valen special char, instant remap: a that in other dialects is i
                Vv1| !Valen special char, instant remap: unknown short vowel
                Vo1| !Valen special char, instant remap: o/wa variation
                Vo2| !Valen special char, instant remap: a that in other dialects is o, but is [e] in initial change (/o/ is [we] in initial change, /a/ is [e] in initial change)
                Bv1| !Bowers special char, instant remap: vowel to supply missing vowel at beginning of lexrep (fixes oversyncopation for the moment)
                "PV/CCNJ+"| !marks changed conjunct form
                CRED1|  !reduplicant consonant
                VRED1  !reduplicant vowel
            ]; 
define cons [
                b|d|g|p|t|k|
                j|c h|
                z (h)|s (h)|
                m|n|
                w|y|
                %'|h|
                w1| 
                w2|
                w3|
                w4|
                w5|
                w6|
                y1| 
                y2| 
                s1| 
                m1|
                n1| 
                n2| 
                n3| 
                n4| 
                b1|
                d1|
                d2
                !c1 !primary role is an inserted hiatus breaker. underlying presence w/ designation as consonant triggers vowel insertion rules (not desired)
            ]; 
define cseqs [[
                b|d|g|p|t|k|h|
                j|c h|
                [z (h)]|[s (h) (p|t|k)]|
                [m (b)]|[n (d|[z (h)]|j|g|h|s|y|y1)]
               ](w)|
                %'|w|y|
                [g|k]w2|
                w1|w5|y1|y2|s1|m1|n1|n2|n3|n4|b1|d1|d2
            ]; 
define codaseqs [
                b|d|g|p|t|k|
                j|[c h]|
                [z (h)]|[s (h) (p|t|k)]|
                [m (b)]|[n (d|[z (h)]|j|g|h|s|y)]|
                w|y|h|
                w1|w5|y1|y2|m1|n1|n2|n3|n4|s1|b1|d1|d2
                ]; 
define longv [a a|e|i i|o o];
define shortv [a|i|o|e1]; !all other abstract vowels to [aio] by time relevant? should this bar following vowel, otherwise will match first grapheme of long vowel.
!define trushortv [a \[a]|i \[i]|o \[o]|e1]; !all other abstract vowels to [aio] by time relevant? should this bar following vowel, otherwise will match first grapheme of long vowel.
define shortvsurface [a|i|o]; 
define absv [a1|i1|i2|o1|e1];
define vowel [a (a)|i (i)|o (o)|e|a1|i1|i2|o1|e1];
define nastrig [n [h|y|s]];

define nas [n|n2|m|m1];  !should the other nasals be here (n4?, m2?)

!special y for raising a (-naan-ag -> naanig, -e1ny-ag-> enyig, -dy-ag (preterites) -> jig)

!remapping rule to purge special vowels
define rmspecialv [
                    Va1 -> o ,
                    Vi1 -> a ,
                    Vv1 -> i ,
                    Vo1 -> w a ,
                    Vo2 -> a ,
                    Bv1 -> i 
                ];


!####
!#rules that require morpheme boundary reference
!####
!{ morph bound
!{dependent stems 
define preGli [ o -> w || _ %< %^ vowel ]; !Bloomfield talks about this, and it appears in wiij... words. in a lot of cases the o- just seems to delete  (which we can get with 3+Nul)
define preDel [ shortv -> 0 || _ %< %^ vowel ];  
!}
!{prefix adjustments
define optinitV [shortv (->) 0 || _ %< shortv cons ] ; !comment this rule for post-rhythmic syncope stage, could use trushortv
define preLen [ [..] -> o || shortv %< _ o ];
define preNas [
                [ [..] (->)  n || n i _ %< [d|g|b] ] .o.
                [ n (->) m || n i _ %< b] .o.
                [ n (->) 0 || _ i [n|m] %< [d|g|b]]
                ];
define preEpen [ [..] ->  d || shortv _ %< vowel ];
!}
define conDimMutation [[m|n] (->) 0 || _ %> e1 n [y|s] ] ; 
define conPl [ shortv (->) i || e1 n y %>  _ ]; !would be nice to have y1 here, but then it is the only y1 that doesn't delete !DAB 2023 this duplicates a ya->yi rule we have more generally in spelling relaxation !DAB 2024 CONTRA VALENTINE 2001:190, this is apparently optional, since we have many lexical contemptives in the corpus with enyan/enyag, and also some (apparently derived) contemptives with enyan: bnenyan from AM

define a1toshort    [a1 %> a  ->  a %>] ;
define a1toe        [a1 %> e1  -> %> e] ;
define a1tolong     [a1 %>  ->  a a %>] ;
define i1tolong     [i1 %>  ->  i i %>] ;

define ordAssim     [nas -> m || _ %> b1 ,, !cnj prets have assim, no epenthesis
                    nas -> n ||
                                _ c1 %> [s|z|d|d1|j|g] , !cnj neg, else assim
                                _ %> k !VAI, VTI imperatives are only affixes beginning with k
                    ] ; 
define awiCoalescence [ a w [%> (%>)] i -> o o || \[a] _ [m|n|k w a a] .o. !consonantal sonorants and ikwaa cnj Thm2b+3Pl(see Kaye 1971, Piggott 1980 Ch 3.4, p. 300, further remarks in conclusion)
                        a w [%> (%>)] [i|i2] -> a a || \[a] _ [p|b|t|d|k|g|j|c h]  !non-continuants
                        ]; 
define NC           [%> k -> g || n _ ] ; !VAI VTI imperatives [m|n]k -> ng
define cnjD1Gnasstem [ d1 -> g || nas c1 %>  _ ] ;
define partexcise   [ y1 -> 0 || d1 _ w4, d1 _ %> b1 ] ; !keep d1 next to special mode consonants so d1 -> g / _ w4 (cnjd1w4), d1b1 -> p (cnjD1p)
define cnjD1p       [d1 -> p || \[nas] _  %> b1 ]; !fortition for pret
define cnjpb1       [b1 -> 0 || p %>  _ ]; !cleaning up fortition
define cnjnegsig    [ [..] -> w4 || s i w3 %> d1 _ .#. ] ; !3Sg neg # -> sig *sid
define cnjd1w4      [ d1 -> g || _ w4 ] ; !d1 (third person) turns to g before dub
                                            !precedes w4 -> o, could d1 -> g || _ o/wwork?
!define cnj21dubw    [ [..] -> w || w4 %> a n g _ %> ] ; !close reading of Valentine 2001 shows 21pl dub has an extra w, Rand suspects this is an error.
define cnjoban      [   w -> o || [e|[a n]] g _ %> b1 ,, !2pl, 21pl w -> o (prt)
                        w4 -> o || _ %> b1 ]; !ditto for w4 (w4b1 only third person)
define cnjW3w       [w3 -> w || _ %> vowel] ; !w3 only appears in hiatus (why req morph bound?)
define cnjW3del     [w3 -> 0] ; !else: delete
define cnjrmbound   [ %> -> 0 ||  m _ b1, nas c1 _ z ]; !making sure no epenthesis in assim cases
define cnjaepen     [[..] -> a || nas c1 _ w4 , !a epen for nas-final
                                  [nas|d2] c1 %>  _  g [w4|o], !d1w4 *= labiovelar gw? 
                                  d2 c1 %> _ g %> b !DAB 2023 added d2 bc shkwaakmigd_a_gba, a preterite form
                                  ] ; 
define w5o          [w5 -> o || cons _ %> a [n|g]] ; !feed oa->oo ... expanded to cons _ from nas _ to accomodate VII Cwan->Coon
define w5del          [w5 -> 0 || _ %> [[g o b a]|[n o o n]]  ] ; !bleed ccEpen
define w5w          [w5 -> w] ; !doesn't require morph bound, but kept it here for contiguity with other w5 rules
define mgAssim      [m %> %> g -> n g,,
                     [n|m] %> %> d -> n d
                     ] ; !antipassive -ge does not trigger epenthesis, rather it triggers assimilation (Valentine p 405), same for reciprocal/reflexive di/dizo
define noomagad     [[..] -> o o || nas _ %> %> m a g a d2] ; !bleed ccEpen
define vLenmagad    [[..] -> i || \[i] i _ %> %> m a g a d2 ,, 
                    [..] -> o || \[o] o _ %> %> m a g a d2 ,,
                    [..] -> a || \[a] a _ %> %> m a g a d2 ] ;
define ccEpen [[..] -> i || cons _ %> cons , !these [i's] probably condition palatalization -> not in noun stems, so can't put i2 here and then trigger td palatalization
                            nas c1 _ %> nas .o.
                [..] -> i2 || cons  %> %> _ cons !palatalization conditioned w/ deriv suffixes like gaazo, so restrict i2 to occur with these suffixes ... not sure if N or S palatalize with all of these
                            ]; !workaround for conjunct order

define rmBound [[%>|%<|%^] -> 0]; 
!} end morph bound

!###
!# c2 management
!# some of these rules feed vowel coalescence (vCoal) below
!###

define c2o [[c2 -> o o || [m|n] _ k ] .o.
            [c2 -> o   || [m|n] _ g ] .o.
            [c2 (->) o || [a|i|o] _ k ] ]; ![c2 -> a || [m|n] _ ]
define c2a [c2 -> a || [m|n] _ ] ; 
define rmc2 [c2 -> 0] ; 

!####
!#reduplication template filling rules
!####
!numerical reduplication (for distributive numbers) has e-vocalism, verbal reduplication has VRED1
define cfill [
    CRED1 -> b      || _ [VRED1|e] b .o.
    CRED1 -> d      || _ [VRED1|e] d .o.
    CRED1 -> g      || _ [VRED1|e] g .o.
    CRED1 -> j      || _ [VRED1|e] j .o.
    CRED1 -> z      || _ [VRED1|e] z .o.
    CRED1 -> z h    || _ [VRED1|e] z h .o.
    CRED1 -> m      || _ [VRED1|e] m .o.
    CRED1 -> n      || _ [VRED1|e] n .o.
    CRED1 -> w      || _ [VRED1|e] w .o.
    CRED1 -> y      || _ [VRED1|e] y .o.
    !and initial Cw words?
    !{Trying to get RED-ateg to come out as tateg in addition to the historically expected yateg (<ayateg)
    !be alert to VRED1 actually needing to be filled by the historical vowel (too little data to know at the moment... though this innovation presupposes word is now C-initial)
    !by rights there shouldn't be fortis-initial words (all had initial short V), 
    !not sure about RED-v_otherC words, though I expect something similar
    CRED1 VRED1 shortv (->) Bv1 b a    || _  b .o.
    CRED1 VRED1 shortv (->) Bv1 d a    || _  d .o.
    CRED1 VRED1 shortv (->) Bv1 g a    || _  g .o.
    CRED1 VRED1 shortv (->) Bv1  j a  || _   j .o.
    CRED1 VRED1 shortv (->) Bv1 z a    || _  z .o.
    CRED1 VRED1 shortv (->) Bv1 z h a  || _  z h .o.
    CRED1 VRED1 shortv (->) Bv1 p a    || _  p .o.
    CRED1 VRED1 shortv (->) Bv1 t a    || _  t .o.
    CRED1 VRED1 shortv (->) Bv1 k a    || _  k .o.
    CRED1 VRED1 shortv (->) Bv1 c h a  || _  c h .o.
    CRED1 VRED1 shortv (->) Bv1 s a    || _  s .o.
    CRED1 VRED1 shortv (->) Bv1 s h a  || _  s h .o.
    !and former V-cluster words?
    !}
    !{guessing what to do with simplified clusters in the dict (gVt->gt->t in the dict)/dict entries that lack the initial vowel
    !CRED1 VRED1 -> Bv1 b a    || _  b .o.
    !CRED1 VRED1 -> Bv1 d a    || _  d .o.
    !CRED1 VRED1 -> Bv1 g a    || _  g .o.
    !CRED1 VRED1 -> Bv1  j a  || _   j .o.
    !CRED1 VRED1 -> Bv1 z a    || _  z .o.
    !CRED1 VRED1 -> Bv1 z h a  || _  z h .o.
    CRED1 VRED1 -> Bv1 p a    || _  p .o.
    CRED1 VRED1 -> Bv1 t a    || _  t .o.
    CRED1 VRED1 -> Bv1 k a    || _  k .o.
    CRED1 VRED1 -> Bv1 c h a  || _  c h .o.
    CRED1 VRED1 -> Bv1 s a    || _  s .o.
    CRED1 VRED1 -> Bv1 s h a  || _  s h .o.
    !}
    CRED1 -> 0
    ];

define fortite [ !I'm inclined to think we had lenition in the reduplicant rather than fortition in the base, but that would require a huge amount of fieldwork to get the right representations
    b (->) p || VRED1 _ .o.
    d (->) t || VRED1 _ .o.
    g (->) k || VRED1 _ .o.
    j (->) c h || VRED1 _ .o.
    z (->) s || VRED1 _ .o.
    z h (->) s h || VRED1 _ 
    ]; 

define vfill [ !this will be tripped up by cluster-initial words (probably good to make an error here, because I don't know how they are reduplicated
    [..] -> y           || VRED1      _ vowel          .o. !initial onsetless words !gii-baa-RED-izhaa -> gii-baa-ayizhaa -> gii-baa-yizhaa AK story (Valentine 909)
    VRED1 -> a a        ||            _ cons [a a|i i]      .o. 
    VRED1 (->) e        ||            _ cons e              .o. 
    VRED1 -> [a a|e]    ||            _ cons o o            .o. !Valentine only lists aa for oo reduplication, but we have bebooni-zegim
    a (->) a a          || VRED1 cons _ \[a]           .o. !stem internal lengthening under reduplication
    VRED1 -> a          ||            _ cons [i|a|o|e]     !Valentine p 915 has ? for what to do with o
    ] ;

!###
!#abnormal rule to get rid of L1 before it causes trouble. note, the behavior of the vowel preceding L1 before a suffix is not known
!###

define L1del [ L1 -> 0 || _ ? ] ; 

!####
!#normal rules
!####

!##Conjunct order rules
define ccnjexcrspec [ [n5] -> i n || "PV/CCNJ+" _ ] ; !updated to make this lexically specific 
!define ccnjexcrgen [ [..] (->) i n || "PV/CCNJ+" _ d ] ; !original rule
define n5Del        [ [n5] -> 0 ] ; 
define ccnjlong  [i i -> X2 a a, a a -> X2 a y a a, e -> X2 a y e, o o -> X2 w a a || "PV/CCNJ+" (cseqs) _ ] ; !changed forms, X2 is a blocker to stop changed short from getting fed by this rule
define ccnjshort [[i|a] -> X2 e, o -> X2 (w)e || "PV/CCNJ+" (cseqs) _ ] ; !changed forms
!define ccnjexcr [[..] (->) n || X2 (w|y)[e|a a] _ d ,, [..] (->) m || X2 (w|y)[e|a a] _ b ] ; !this is incorrect afaik. use ccnjexcrspec
define rmccnj       [["PV/CCNJ+"|X2] -> 0] ;
define cnjHiatus    [c1 -> y || vowel _ vowel] ; !V-final hiatus
define cnjVoi       [s -> z  || nas c1 _ ] ; !nas-final negation
define d2k          [d2 c1 g -> k || _ [.#.|y1] ] ; !d-final vii cnj 0sg ends in k, not dg !but 'harrow' e-baazgobjigemgakin has k, not dg, so it seems to not just be word-final. what are the cases where we need d2 c1 g -/> k?
define d2d2fuse       [d2 %> d2 -> d ] ; !ngod loses d before d-initial forms
define d2del        [d2 c1 -> 0 || _ s ] ; !d-final vii loses d before s
define d2d          [d2 -> d] ;
define cnjRmC1      [c1 -> 0] ; !no more use for special c1
define cnjD1Gnas    [d1 -> g || nas _ ]; !oft-duplicated d1->g change (envi mildly different above
define d1pal    [[d|d1] -> j || _ y1 vowel ]; !palatalization in participles, targets d now because -d `+3' in VTA 3C pattern does not fuse like d1 does, but it does palatalize
define cnjD1d       [d1 -> d]; !elsewhere d1
!define cnjW4nas     [[..] -> h || w4 e n2 _ ]; !third person dub nasalization, Medler didn't do this MOVE TO ERROR MODEL
define cnjW4w       [w4 -> w || _ vowel]; !w4 non-o realization
define cnjw4Del     [w4 -> 0]; !elsewhere
define cnjb1b       [b1 -> b]; !assimilator b now b



!other rules
define m2pseudoV [[..] -> a || .#. _ m2 ] ; 
define m2Del   [m2 (->) 0 ] ; 
define m2Assim [m2 -> n || _ d ,, m2 -> m || _ b] ; 
define w6Coal  [w6 i -> o || _ \[i]] ; 
define w6ToW   [w6  -> w ] ; 
define vtiVoi [m1 s -> n z ] ; !nas-final negation (duplicating a little!)
define complen [m1 -> a || _ [m|n]] ;
define m1n      [m1 n4 -> n] ;
define n4n      [n4 -> n] ;
define m1m      [m1 -> m] ;
define w2nas [ w2 -> 0 || _ (vowel) [m|n|n2|n3]]; !not n1 (former lateral)
define w2def [ w2 -> w ];
!define tdPal [d -> j, t -> c h || _ i2 ] ; !combined with NSpal this is derivational morphology palatalization, though specifying the double morpheme boundary seemed redundant ... I couldn't find any VTAs that end in t|d, but if there are, there could be unexpected palatalization in the imperative and cnj(?) and local theme sign ADD TO CASCADE (combine with NSpal? ... -(i)we triggers NS pal (Valentine p 407)
define NSpal [s1 -> s h, n1 -> z h, d -> j, t -> c h || _ i2 ]; 
define Salv [s1 -> s];
!define Npal [n1 -> z h || _ i2];  !this is now part of NSpal
define i2def [i2 -> i];
define Nalv [n1 -> n]; 

define ny [[y|y1] -> h || n _ [%-|.#.]] ;

!define apocope [ [shortv] -> 0 ||  cons _ .#. ,, !cons specified because 'i' in 'ii' shouldn't delete
!                 [w|y|absv|w1|w2|y1] -> 0 || _ .#.]; !these rules apply "at the same time"
!accounting for word-minimality
define apocope [ [shortv] -> 0 || [[shortv cseqs shortv ]|[longv (cseqs shortv)]] cseqs _ .#. ,, !cons specified because 'i' in 'ii' shouldn't delete
                 [L1|w|y|absv|w1|w2|y1] -> 0 || [[shortv cseqs shortv ]|[longv (cseqs shortv)]] (cseqs) _ .#.]; !these rules apply "at the same time"

define hw2w [ [h w -> h, h w -> [w::1] || _ .#.] .o. !this could probably be trimmed to just word-finally (there should not be any word final shw by this point of the derivation)
            [w i -> o || \[s|c|n|z] h _ ] .o. !reinstating a specific version of wiCoal here because there are ho sequences from hwi in Medler, but the next rule ensures that "correct" surface forms have wi (and wiCoalescence in error modelwould not apply to make it o, because that would make Vo)
            [h w -> w || \[s|z|c|n] _ ]] ; !afaik, in all other environments glottal-w clusters are reduced to w. see note immediately below
            !hw seqs are in VTA URs for historical reasons, but the h's never seem to appear. Rhodes 1985b says h in some forms, w in others. Following Bloomfield 1958:9 (who says there are word-final h's. this is quite clearly true for hw verbs in Minnesota Ojibwe), we allowed the h to appear when word final (bc this rule is bled by glidedel), otherwise, w (this was a guess). There are quite clear cases of hw verbs becoming w verbs (giishkaw in AM!), so the rule has become more of an either-or, and moved to counter-bleed glidedel

define glidedel [[w|y|w1|w2|y1] -> 0 || cons _ .#. ];


define y2y  [y2 -> y ];

define n2del  [ n2 (->) 0 || _ .#. ]; !deleting n2s are strictly Odawa, variable in Medler
define n2def  [ n2 -> n];
define vvvDel [ shortv -> 0 // _ longv, longv _ ]; 

!I don't think it can be included with vCoal (but can't remember why)
!define Ecoal [e1 shortv -> e] ; 
! this saves contemptives/diminutives from getting aa:
!define bleedvCoal [a1 e1 -> e]; !obsolesced by a1toe

define y1Coal [y1 shortv -> i ];
define w1Coal [w1 [i|e1] -> o]; 
define w1Coal2 [w1 a -> o]; !only Odawa
!define w1Faith [w1 a -> w a]; !other dialects
define w1Short [w1 -> o || .#. (cseqs) [a|i|o] cseqs _ .#. ]; 
define w1Del [w1 -> 0]; 
!define nyCoal [shortv -> i || n y _ ];
!define wiCoal [w i (->) o]; !Medler does this (could be more widespread, optional?) !this makes awi -> ao, feeding vCoal -> aa ... which is right, but mandatory AFAIK in some contexts MOVE TO ERROR MODEL

!will need to apply vowel deletion over nasal
!giigoonhe1ns -> giigoons
!but not giigoonhag -> *giigoonhg (giigoonyag)
define vCoal [shortv -> o || [o|o1] _,, shortv -> i || [i|i1] _ ,,  shortv -> a || [a|a1] _ ];

!these handle contemptive/diminutive allomorphy
!define lenPreNas [ e1 -> e || _ nastrig];
define lenPreNas [e1 -> e || _  nastrig,,
                    [..] -> o || \o o _ nastrig ,,
                    [..] -> i || \i i _ nastrig ,,
                    [..] -> a || \a a _ nastrig ];

define Ei [e1 -> i];

!devoicing, final lowering is written by non-Rhodes spelling (i->e not standard)
!define devoice [b -> p, d -> t, g -> k || _ .#.];
!define finlowo  [o  ->  a || _ .#.];  ! SNM: had to split the rule in two - it
!define finlowi  [i (->) e || _ .#.];  ! is not possible to combine -> and (->) in the same rule the way it was.

define str1 [ [..] -> %& || vowel _ vowel, vowel vowel _, e _ ];
define str2 [ [..] -> %& || shortv _ (codaseqs) [%-|.#.] ];
define str3 [ [..] -> %& // shortv cseqs shortv _ ];

define ambigsync [vowel -> %' || !syncope in ortho ambig contexts
                                \[.#.|%-] n _  [z|g|h|s|y], !material preceding n reflects a permitted ambiguity
                                                            !for derived nh, ' not always used (mzinhigan perhaps preceding V must be long?)
                                [s|z] _  [h]
                                ];

define clustsync [vowel -> %' || !crazy version (marking all prim/sec ambig clusts)
                                n _  [d|z h|z|j|g|h|s|y],
                                m _  [b],
                                [s|z] _  [h],
                                [s (h)] _  [p|t|k],
                                cons-[w|y|w1|w2|w3|w4|y1|%'|h] _  w
                                ];

define rsync [vowel -> 0 || _ \%& ]; 

!define codawdel [w (->) 0 || _ cons ]; !w variably deletes in coda Medler MOVE TO ERROR MODEL
                                        !alternatively: the deleting w (VAI 3 suff) is irregularly present
define strandedNas [n -> 0 || [.#.|%-] n  _ [g|d|j|z] ]; !limiting this to just the consonantal cluster members (g|d|j|z(h)), since that is definitely where it is needed, but maybe nnw clusters also get written nw?
!define strandedNas [[n|m] (->) 0 || cons  _ cons ]; 

define cleanse [ [%>|%^|%<|%&|%*] -> 0 ]; !> = suff bound, < pre bound, ^ v-init dep stem marker, & stress marker, *extended prefix boundary


read regex [ 
    L1del        .o.
    rmspecialv    .o. !special char killer
    preGli      .o. !This is a bloomfield rule ... very useful for getting wiij... words, etc (these are prominent in AW stories)
    !optinitV    .o. !ORIGINAL TREATMENT TO ALLOW post syncope n-nokii < n[d]-ankii < nidanokii. CURRENT TREATMENT IS TO USE SHORTENED PREFIXES WITH +Nul TAG (ALLOWS FOR EASIER IDENTIFICATION, BECAUSE IT IS NOT SILENT, BUT IT DOES CREATE (USUALLY STARK) OVERGENERATION ON ORIGINAL CVC WORDS) LEAVE COMMENTED OUT
    preDel      .o.
    preLen      .o.
    !preNas      .o. !non-syncopating dialects have excrescent nasals that show up after ni- '1'. comment out in syncope versions
    preEpen     .o. 
    conDimMutation .o.
    conPl       .o.
    a1toshort   .o.
    a1toe       .o.
    a1tolong    .o.
    i1tolong    .o.
    ordAssim    .o.
    NC          .o.
    cnjD1Gnasstem .o.
    partexcise  .o.
    cnjD1p      .o.
    cnjpb1      .o.
    cnjnegsig   .o.
    cnjd1w4     .o.
    cnjoban     .o.
    cnjW3w      .o.
    cnjW3del    .o.
    cnjrmbound  .o.
    cnjaepen    .o.
    w5o         .o.
    w5del       .o.
    w5w         .o.
    noomagad    .o.
    vLenmagad   .o.
    mgAssim     .o.
    ccEpen      .o.
    awiCoalescence .o. !this is fed by ccEpen
    rmBound     .o. !rules at or above this line reference morpheme boundaries
    c2o         .o. !imperative rules (at least for vai)
    c2a         .o.
    rmc2        .o.
    cfill       .o. !reduplication rules
    fortite     .o.
    vfill       .o.
    ccnjexcrspec .o.
    n5Del       .o.
    ccnjlong    .o.
    ccnjshort   .o.
    rmccnj      .o.
    cnjHiatus   .o.
    cnjVoi      .o.
    d2k         .o.
    d2d2fuse    .o.
    d2del       .o.
    d2d         .o.
    cnjRmC1     .o.
    cnjD1Gnas   .o.
    d1pal       .o.
    cnjD1d      .o.
    !cnjW4nas    .o. !Medler didn't have this rule
    cnjW4w      .o.
    cnjw4Del    .o.
    cnjb1b      .o.
    vtiVoi      .o.
    complen     .o.
    m2pseudoV   .o.
    m2Del       .o.
    m2Assim     .o.
    w6Coal      .o.
    w6ToW       .o.
    m1n         .o.
    n4n         .o.
    m1m         .o.
    w2nas       .o.
    w2def       .o.
    NSpal        .o.
    Salv        .o.
    i2def     .o.
    Nalv        .o.
    ny          .o.
    vvvDel      .o.
    y1Coal      .o.
    w1Coal      .o.
    w1Coal2      .o.
    !w1Faith     .o.
    w1Short       .o.
    w1Del       .o.
    !wiCoal      .o. !Might should include this rule (Medler, might be more general)
    vCoal       .o.
    lenPreNas   .o.
    Ei          .o.
    apocope     .o.
    hw2w        .o. !historical behavior would have glidedel bleed hw2w, but there are clear innovations that motivate making hw2w be counterbled by glidedel
    glidedel    .o.
    y2y         .o.
    n2del       .o.
    n2def       .o.
    str1        .o.
    str2        .o.
    str3        .o.
    ambigsync   .o. !comment out for non-syncopated
    rsync       .o. !comment out for non-syncopated
    !codawdel    .o. !Medler, probably more general
    strandedNas .o. !ngoji (not nngoji), etc
    cleanse     
    ]; 
save stack phonology.hfst
