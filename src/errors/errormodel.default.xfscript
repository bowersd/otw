set encode-weights ON
!define cnjNasVowel                  [[..] -> h ||  e n _ .#.] ; !redundant with nasalEmergence
define finPostNasVoi                [p -> [b::1], t -> [d::1], k -> [g::1], s -> [z::1], s h -> [z h::1], c h -> [j::1]   || [m|n]  _ .#. ]; 
define finDevoi                     [b -> [p::1], d -> [t::1], g -> [k::1], z -> [s::1], z h -> [s h::1], j -> [c h::1]   ||  _ .#. ]; 
![b -> p || m _ .#. ,,
!                                    d -> t, g -> k, z -> s, z h -> s h, j -> c h || n _ .#. ]  ; 
define finLowering                  [o -> a, i -> e || \[a|i|o|e] _  (p|t|k|c h|
                                                                        [s (h)](p|t|k)|
                                                                        [m (b)]|[n (d|g|j|z (h)|h)]|
                                                                        w|y|%'|h) .#. ] ;
!!!!
define nasalEmergence               [h -> [[0]::1] || n _ .#.] ; 
define gnMetathesis                 [g n (->) [n g::1] || _ \[a|e|i|o]] ;
define indDeletion                  [d -> [[0]::1] || i n _ .#.] ;
define nDeletion                    [n -> [[0]::1] ||  _ .#.] ;
define vvnTovvnh                    [[..] -> [h::1] || [i i|a a|o o|e] n _ .#.] ; 

!!!!
define initialGlideDeletion         [y -> [0::1] || .#. _ [i|e],,
                                    w -> [0::1] || .#. _ o] ;
define structuralW                  [[..] -> [w::1] || \[e|a|i|o|p|t|k|s (h)] (w) _ ] ; 
define postYRaising                 [a (->) [i::1] || y _ \[a]] ; 
define glideBacknessAssimilation    [w (->) [y::1] || [a|e|i] _ ,,
                                    y (->)  [w::1] || o _ ] ; 
define preGlideLengthening          [[..] (->) [o::1] || o _ w ,,
                                     [..] (->) [i::1] || i _ y]; !there may also be some ambiguity before nasals
define wiCoalescence                [w i (->)  [o::1]] ; 
define codaWDeletion                [w (->) [0::1] || _ \[a|i|o|e]];
define hw                           [h (->) [[w|%'|0]::1] || \[c|s|n|z] _ ];

define nVSzhAlternation             [z h (->) [n::1] || _ .#., _ i ] ; 

!!!! Voice in clusters
define stridentDevoicing            [z h (->) [s h::1], z (->) [s::1] || _ [p|t|k|b|d|g]] ; 
define postStridentDevoicing        [b (->) [p::1], d (->) [t::1], g (->) [k::1] || [s (h)] _ ] ; 
define clusterDevoicing             [b (->) [p::1], d (->) [t::1], z (->) [s::1], j (->) [c h::1], z h (->) [s h::1] || _ [p|t|k|s|c]] ;  

!!!! Cluster adjustments
define homorgObsMerge [
                    b b (->) [p::1], b p (->) [p::1], p b (->) [p::1], p p (->) [p::1],
                    d d (->) [t::1], d t (->) [t::1], t d (->) [t::1], t t (->) [t::1],
                    g g (->) [k::1], g k (->) [k::1], k g (->) [k::1], k k (->) [k::1],
                    z z (->) [s::1], z s (->) [s::1], s z (->) [s::1], s s (->) [s::1],
                    z h z h (->) [s h::1], z h s h (->) [s h::1], s h z h (->) [s::1], sh sh (->) [s h::1],
                    j j (->) [c h::1], j c h (->) [c h::1], c h j (->) [c h::1], c h c h (->) [c h::1]
                    ]; 
define lenisNasAssim [ b (->) [m::1], g (->) [n g::1], d (->) [n::1] ||  _ [m|n] ,, !from Rhodes 1985b p 468
                       b n (->) [m::1] || _ d ] ; !If I had a dime for every bndam -> mdam...
define lenisStopDeletion [[d|b|g] (->) [0::1] || _ \[a|i|o|w|y]] ; 
define lenisFortition [ b (->) [p::1], g (->) [k::1], d (->) [t::1], j (->) [c h::1], z h (->) [s h::1], z (->) [s::1] ||  _ [p|t|k|s|c h] ] ; !from Rhodes 1985b p 468
define initialHomorgMerge    [ b b -> [b::1], g g -> [g::1], d d -> [d::1] || [.#.|%-] _ ] ; !from Rhodes 1985b p 469
define initialHomorgSonMerge [ m m -> [m::1], n n -> [n::1], w w -> [w::1] || [.#.|%-] _ ] ; !from Rhodes 1985b p 468
define nasalPlaceAssimilation       [m (->) [n::1] || _ [d|t] ,,
                                    m (->) [[n %']::1] || _ [z|s|g|k] ,,
                                    n (->) [m::1] || _ [b|p] ]; 

!!!!
define negHyphEpenthesis            [[..] (->) [%-::1] || _  [s|z] i i] ; 
define aposHyphDeletion             [[%'|%-] (->) [0::1]] ; 
define nkApos                       [[..] (->) [%'::1] || n _ k ] ; 

!!!! Al rules
define gratuitousNH                 [y (->) [h ::1]|| n _ ,, [..] (->) h || n _ s ] ; 
define kaw2kow                      [a (->) [o ::1]|| k _ w] ; 
define y2h                          [y (->) [%'::1] || [a|e|i|o] _ [a|e|i|o] ] ;  !this is similar to hw rule
define glotGlide                    [h (->) [w ::1] || [a|e|i|o] _ [a|e|i|o] ] ;  !this is similar to hw rule
define unrounding                   [o (->) [a ::1]|| \[o] _ \[o]] ; !this is a general dialectal feature (beyond the specific final syllable vowel lowering rule)
define ko2kwa                       [o (->) [w a::1] || [g|k] _ ] ; !I think I have this backwards. The original configuration is Kwa, which becomes o in Odawa
define nvw5oLEVEL                   [[[\[a]a]|[\[i]i]|[\[o]o]] w a (->) [o o::1] || _  [n|g] .#. ] ; !DAB added for Al Corbiere. capturing a leveling found in Al Corbiere texts: baatiiniwag>baatiinoog, zhgi'gaazowag > zhgi'gaazoog
define shortening [i (->)   [i i::1] || \[i] _ [g|n|n g] .#. ,, !variation in vowel length before pl/obv/loc
                   o (->)   [o o::1] || \[o] _ [g|n|n g] .#. ,,
                   i i (->) [i ::1], o o (->) o || _ [g|n|n g] .#.
                ] ; 


define errorUnion [ !cnjNasVowel|
        !finPostNasVoi|
        finDevoi|
        finLowering|
        nasalEmergence|
        gnMetathesis|
        initialGlideDeletion|
        structuralW|
        posYRaising|
        indDeletion|
        nDeletion|
        vvnTovvnh|
        glideBacknessAssimilation|
        preGlideLengthening|
        wiCoalescence|
        codaWDeletion|
        hw| 
        stridentDevoicing|
        postStridentDevoicing|
        clusterDevoicing|
        homorgObsMerge|
        lenisNasAssim|
        lenisStopDeletion|
        lenisFortition|
        initialHomorgMerge|
        initialHomorgSonMerge|
        nasalPlaceAssimilation|
        negHyphEpenthesis|
        aposHyphDeletion|
        nkApos|
        gratuitousNH| 
        kaw2kow|
        y2h|
        glotGlide|
        unrounding|
        ko2kwa|
        nVSzhAlternation|
        nvw5oLEVEL|
        shortening
        ]; 

regex [errorUnion errorUnion] ; 
save stack errormodel.hfst
